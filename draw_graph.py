
import matplotlib.pyplot as plt
import numpy as np

# x = np.array([1, 2, 3, 4, 5])
# y = np.power(x, 2) # Effectively y = x**2
# e = np.array([1.5, 2.6, 3.7, 4.6, 5.5])
#
# plt.errorbar(x, y, e, linestyle='None', marker='^')
#
# plt.show()


# 20210119042823
train_acc1 = [0.7395833333333334, 0.9380555555555555, 0.9455555555555556, 0.9525, 0.9554166666666667, 0.9615277777777778, 0.9608333333333333, 0.9652777777777778, 0.9647222222222223, 0.9693055555555555]
train_loss1 = [0.04407893041704988, 0.018236424570269364, 0.015473376000235375, 0.013583103650469436, 0.01300642524338198, 0.011643846605535751, 0.011406755153891734, 0.010054559232521569, 0.009516800695758623, 0.008960845506056405]
val_acc1 = [0.9594444444444444, 0.9566666666666667, 0.9566666666666667, 0.9622222222222222, 0.9616666666666667, 0.9627777777777777, 0.9611111111111111, 0.9616666666666667, 0.9627777777777777, 0.9633333333333334]
val_loss1 = [0.012316130471105377, 0.011942050758387066, 0.011884602577839461, 0.01113259644803798, 0.012192235021179335, 0.01117351358219619, 0.011745757020867637, 0.011564997312056626, 0.01159315623381796, 0.011607024072727654]
test_acc_list1 = [0.9570000000000001]
test_loss_list1 = [0.013853534129972103]

# 20210119050135
train_acc2 = [0.7640277777777778, 0.9444444444444444, 0.9502777777777778, 0.9520833333333333, 0.9554166666666667, 0.9622222222222222, 0.9620833333333333, 0.9630555555555556, 0.9622222222222222, 0.9683333333333334]
train_loss2 = [0.04170251588569954, 0.01633204259456963, 0.014921996581057707, 0.013479474427100891, 0.012851830225360268, 0.011007910522174725, 0.01099907636309379, 0.010012540286572605, 0.009993727350786989, 0.009320485349382781]
val_acc2 = [0.9605555555555556, 0.9561111111111111, 0.9511111111111111, 0.9594444444444444, 0.9666666666666667, 0.9672222222222222, 0.9672222222222222, 0.9527777777777777, 0.9644444444444444, 0.9605555555555556]
val_loss2 = [0.012588736215451111, 0.013628438296986537, 0.013852871454113888, 0.012807790151823106, 0.011438477488118224, 0.011988342670891952, 0.012526950757601298, 0.016647244320031153, 0.014978150255034657, 0.014145980282046366]
test_acc_list2 = [0.9560000000000001]
test_loss_list2 = [0.012764436959812882]

# 20210119053448
train_acc3 = [0.7916666666666666, 0.94375, 0.9479166666666666, 0.9565277777777778, 0.95625, 0.9595833333333333, 0.96, 0.9675, 0.9654166666666667, 0.9666666666666667]
train_loss3 = [0.03895202513900586, 0.016399491296680127, 0.01508907579157191, 0.013520990762109351, 0.012541641685060717, 0.011710420276018946, 0.011130349747076657, 0.010037390258189083, 0.009687816052998338, 0.009373782196538135]
val_acc3 = [0.9466666666666667, 0.9661111111111111, 0.9633333333333334, 0.9611111111111111, 0.9622222222222222, 0.9583333333333334, 0.9516666666666667, 0.955, 0.9572222222222222, 0.9577777777777777]
val_loss3 = [0.016196924868143267, 0.011691443617196961, 0.012185566266610598, 0.011292159107203286, 0.011217070865289619, 0.01335607293449963, 0.012691371437653693, 0.014695120456615566, 0.01245157711631489, 0.01258152558511938]
test_acc_list3 = [0.9580000000000001]
test_loss_list3 = [0.014895071017148438]

# 20210119060801
train_acc4 = [0.8411111111111111, 0.9476388888888889, 0.9536111111111111, 0.9530555555555555, 0.9580555555555555, 0.9609722222222222, 0.9633333333333334, 0.9636111111111111, 0.9645833333333333, 0.9641666666666666]
train_loss4 = [0.03163135327476387, 0.015282011067029089, 0.01429572987370193, 0.013275549576889412, 0.012356139781978628, 0.011614948111431052, 0.010534366580128941, 0.009885382530669125, 0.009790972691237888, 0.009389548627659679]
val_acc4 = [0.9583333333333334, 0.9577777777777777, 0.9605555555555556, 0.9566666666666667, 0.9605555555555556, 0.9583333333333334, 0.9566666666666667, 0.9627777777777777, 0.9638888888888889, 0.9633333333333334]
val_loss4 = [0.012832679797946993, 0.012739915431011469, 0.012353339642221626, 0.01263185144867748, 0.011843061676223038, 0.012204418201387549, 0.012397125688860089, 0.012360327382137055, 0.012883285519548938, 0.012295677016518312]
test_acc_list4 = [0.9510000000000001]
test_loss_list4 = [0.013600810923264362]

# 20210119064116
train_acc5 = [0.7883333333333333, 0.9447222222222222, 0.9515277777777778, 0.9502777777777778, 0.9558333333333333, 0.9566666666666667, 0.9580555555555555, 0.9623611111111111, 0.9644444444444444, 0.965]
train_loss5 = [0.03863811677813323, 0.01708546926726639, 0.015205189374456597, 0.015209940063521369, 0.013619944274250884, 0.012924362138001015, 0.012389271214229261, 0.01107677416814517, 0.010597255352945973, 0.010411315290499866]
val_acc5 = [0.8583333333333333, 0.9605555555555556, 0.9533333333333334, 0.9594444444444444, 0.9538888888888889, 0.96, 0.9611111111111111, 0.9638888888888889, 0.9583333333333334, 0.9527777777777777]
val_loss5 = [0.034179874950657704, 0.0140630157946402, 0.01392738915540071, 0.01306272749025892, 0.015244311478066569, 0.013360503094477786, 0.013829492172387998, 0.013105984526983876, 0.01547772352185954, 0.016542901654676017]
test_acc_list5 = [0.9460000000000001]
test_loss_list5 = [0.014511024551000446]


train_acc = np.array([a + b + c + d + e for (a, b, c, d, e) in zip(train_acc1, train_acc2, train_acc3, train_acc4, train_acc5)])
train_loss = np.array([a + b + c + d + e for (a, b, c, d, e) in zip(train_loss1, train_loss2, train_loss3, train_loss4, train_loss5)])
val_acc = np.array([a + b + c + d + e for (a, b, c, d, e) in zip(val_acc1, val_acc2, val_acc3, val_acc4, val_acc5)])
val_loss = np.array([a + b + c + d + e for (a, b, c, d, e) in zip(val_loss1, val_loss2, val_loss3, val_loss4, val_loss5)])

# test_acc = [a + b + c + d + e for (a, b, c, d, e) in zip(test_acc_list1, test_acc_list2, test_acc_list3, test_acc_list4, test_acc_list5)]
# test_loss = [a + b + c + d + e for (a, b, c, d, e) in zip(test_loss_list1, test_acc_list2, test_acc_list3, test_acc_list4, test_acc_list5)]

# 平均
train_acc = train_acc/5
train_loss = train_loss/5
val_acc = val_acc/5
val_loss = val_loss/5

# テストデータの平均と標準偏差
test_acc = []
test_acc.append(*test_acc_list1)
test_acc.append(*test_acc_list2)
test_acc.append(*test_acc_list3)
test_acc.append(*test_acc_list4)
test_acc.append(*test_acc_list5)
test_acc_np = np.array(test_acc)
print('test_acc average: {}'.format(np.mean(test_acc_np)))
print('test_acc std: {}'.format(np.std(test_acc_np)))

# epoch
num_epoch = 10

# 描写
# plt.figure()
# plt.plot(range(num_epoch), train_loss, color="blue",
#          linestyle='-', label="train_loss")
# plt.plot(range(num_epoch), val_loss, color="green",
#          linestyle='--', label="val_loss")
#
# # plt.errorbar(range(num_epoch), train_loss, yerr=0.0001)
# # plt.errorbar(x, y, e, linestyle='None', marker='^')
#
#
# plt.legend()
# plt.xlabel("epoch")
# plt.ylabel("loss")
# plt.title("Training and validation loss")
# plt.grid()
# # plt.show()
# plt.savefig("loss.png")
#
#
# plt.figure()
# plt.plot(range(num_epoch), train_acc, color="blue",
#          linestyle='-', label="train_acc")
# plt.plot(range(num_epoch), val_acc, color="green",
#          linestyle='--', label="val_acc")
# plt.legend()
# plt.xlabel("epoch")
# plt.ylabel("accuracy")
# plt.title("Training and validation accuracy")
# plt.grid()
# plt.ylim([0.0, 1.0])  # y 軸表示範囲 0 から 1 までに設定
# # plt.show()
# plt.savefig("acc.png")
