

import numpy as np
import random
import collections


tmp1 = ['2008', '2009', '2010', '2011', '2012']
tmp2 = ['01', '02', '03']
# tmp1 = ['2009']
# tmp2 = ['02']

print('--- kaiseki suruyo ---')


for year in tmp1:
    for page in tmp2:

        # ファイルの準備をしてね
        filename = 'mai' + year + '_' + page

        path_r = './dataset_mask/kakujoshi/' + filename + '_mask_kakujoshi' + '.txt'
        path_w = './dataset_align/kakujoshi/' + filename + '.txt'
        # path_r = './short/mai2008_01_short_mask_kakujoshi.txt'
        # path_w = './short/ts.txt'

        # data = np.array([])
        data = []
        # label = np.array([], dtype='int')
        label = []


        print('--- ' + filename + ' wo hiraite iruyo ---')


        with open(path_r, mode='r') as f:
            # これにラベル０の個数，ラベル１の個数，ラベル２の個数... を入れていく
            # sample_nums = np.array([])
            sample_nums = []

            print('--- data wo kakunin suru ne! ---')

            for line in f:

                label_tmp = int(line.split()[0])  # label
                data_tmp = line.split()[1]  # data

                # print('tmp1:')
                # print(tmp1)

                # 文字列（浮動小数点）を int() で直すことができない，int(float()) とするといける
                # label = np.append(label, label_tmp)
                # data = np.append(data, data_tmp)
                label.append(label_tmp)
                data.append(data_tmp)


            c = collections.Counter(label)
            # print(c)

            for i in range(len(c)):
                # ndarray 全体に対して条件を満たす要素数を数える
                # ここでは label の要素のうち，label が i であるものの数の合計を求めている
                # sample_num = np.sum(label == i)
                sample_num = sum(x == i for x in label)
                # sample_nums = np.append(sample_nums, sample_num)
                sample_nums.append(sample_num)

            print('--- Number of data for each label:', sample_nums)

            # 全クラス内の最小サンプル数を取得
            min_num = min(sample_nums)


            # 各クラスのサンプル数を揃える
            for i in range(len(sample_nums)):
                diff_num = int(sample_nums[i] - min_num)

                if diff_num == 0:
                    continue

                # 削除する要素のインデックスを取得する
                # 削除したいラベル（例えばラベル０）のデータだけを全て抜き出してくる
                # where() はこんな使い方 --> numpy.where(condition[, x, y])
                # ここでは，label == i を満たす要素のインデックス（位置）をタプルで返す
                # 詳細は以下を参照（条件を満たす要素のインデックス（位置）を取得）
                # https://note.nkmk.me/python-numpy-where/
                # タプルになっているので list() でリストに変換する
                # 0番目のインデックスに配置されている
                # indexes = list(np.where(label == i)[0])
                # enumerate() を使ったリスト内包表記 for index, element in enumerate(hoge)
                indexes = [id for id, x in enumerate(label) if x == i]

                # 削除するデータのインデックス
                # 抜き出してきたデータから，削除するものをランダムに選ぶ
                del_indexes = random.sample(indexes, diff_num)
                # 削除対象のラベルを適当な値に置換
                for x in del_indexes:
                    label[x] = 999

                # データから削除
                print('--- sakujo site imasu ---')
                # data = np.delete(data, del_indexes)
                # label = np.delete(label, del_indexes)

                # reverse() はリスト型のメソッドで，もとのリスト自体を逆順に書き換える破壊的処理
                # sort() はリスト型のメソッドで，もとのリスト自体をソートする破壊的処理
                del_indexes.sort(reverse=True)
                # print(del_indexes)
                print('--- num of delete:', len(del_indexes))

                # 削除していって，リストの最後まで行ったら終わり
                for id in del_indexes:
                    # print('delete:', id)
                    data.pop(id)
                    label.pop(id)


                # 0, 1 が同じ数になっているか確かめる
                print('--- ' + str(collections.Counter(label)) + ' ---')

        with open(path_w, mode='w') as f:
            for i in range(len(data)):
                str_tmp = str(label[i]) + '\t' + data[i] + '\n'
                f.writelines(str_tmp)

        print('= = = = = = = = = =')



    # end page
#  end year
print('--- oshi-mai! ---')






# 453875, 453042, 452836, 452597, 452165, 452020, 451788, 451610, 451211, 450774, 450545, 449588, 449189, 449154, 447987, 446466, 443765, 442532, 441735, 440892, 440279, 439479, 439124, 439013, 438694, 437591, 436866, 436744, 436734, 436668, 435966, 435638, 434616, 433980, 433442, 433220, 433062, 432963, 431918, 431514, 430733, 430391, 429402, 429047, 428598, 428562, 427568, 427350, 426632, 426377, 425864, 424753, 424282, 422934, 422779, 422738, 421572, 420675, 420176, 419675, 419357, 419007, 418652, 418219, 417907, 417007, 416557, 416209, 416006, 415193, 414754, 414110, 414108, 413777, 413699, 413296, 413072, 413063, 411876, 411423, 411049, 409995, 409951, 409636, 409269, 409177, 408664, 408286, 407859, 407854, 407668, 407028, 406098, 405976, 405968, 405240, 405165, 404876, 404682, 403926, 403919, 403070, 403032, 402800, 402761, 402402, 402262, 402165, 401947, 401761, 401718, 401517, 401049, 400038, 399849, 399583, 399535, 399454, 399263, 399107, 398991, 398859, 398213, 397926, 397746, 397573, 397115, 397097, 396368, 395828, 394311, 394276, 393801, 393338, 393148, 393008, 392849, 391926, 391753, 391399, 391133, 390035, 389910, 389693, 387480, 387393, 386689, 386495, 386177, 386030, 385359, 385090, 384954, 384696, 381910, 381164, 380933, 380438, 378918, 378824, 378656, 378258, 377132, 376837, 376260, 376230, 376203, 376157, 375778, 375219, 375191, 375146, 374177, 373384, 371874, 371730, 371689, 371354, 371298, 370715, 370580, 369787, 369366, 368996, 368892, 368743, 368311, 368210, 368126, 367924, 367894, 367852, 366912, 366464, 365596, 364998, 364131, 362961, 362147, 361791, 361661, 360986, 360715, 360541, 359726, 359720, 359073, 358408, 357465, 356473, 354991, 354790, 354507, 354127, 353026, 352834, 351898, 350887, 349827, 349633, 349350, 349109, 348850, 348627, 348531, 348456, 348376, 347949, 347641, 347402, 347265, 346695, 346548, 346500, 346474, 346421, 345414, 345323, 345212, 344887, 344663, 343642, 343375, 343299, 342856, 342154, 341621, 341089, 340957, 340638, 339811, 339108, 338889, 338834, 338767, 338490, 337862, 337780, 337699, 337507, 336600, 336291, 335676, 335522, 335424, 335369, 335054, 334039, 333534, 332711, 332122, 332088, 331580, 331519, 331490, 330647, 330446, 329387, 328066, 326482, 325457, 325455, 325336, 325103, 325038, 324398, 323957, 323199, 322650, 322545, 321465, 321455, 320909, 320028, 319666, 318578, 317625, 316814, 316726, 315894, 315261, 314197, 312340, 311402, 310037, 309986, 309662, 309589, 307939, 307848, 307418, 306981, 306879, 306867, 306249, 304604, 303844, 303604, 303427, 301997, 301793, 300494, 300359, 299074, 298929, 298183, 296903, 296338, 296175, 295809, 295089, 294661, 293601, 293515, 293395, 293039, 292352, 291726, 291229, 291221, 291145, 290914, 290157, 289493, 289335, 288591, 288315, 287046, 285923, 285558, 285494, 284262, 283949, 282005, 280959, 280802, 280711, 280561, 280402, 280128, 280066, 279579, 279226, 278786, 278203, 278029, 277001, 276330, 276134, 275831, 274690, 274649, 274318, 274030, 273980, 273926, 273910, 273342, 273049, 272467, 272380, 271393, 271250, 270717, 270362, 270361, 270130, 269579, 269518, 268992, 268591, 268130, 266909, 265917, 265906, 265862, 265691, 265366, 265344, 265301, 265060, 264901, 263905, 261653, 261388, 260946, 260171, 257569, 256711, 256592, 256028, 255972, 255681, 255201, 254456, 254297, 253626, 253591, 253359, 251772, 251173, 251130, 250893, 250887, 250706, 250597, 249546, 249530, 249423, 248289, 247120, 246884, 246691, 246161, 246073, 245732, 245284, 244957, 243839, 243284, 241687, 241397, 241381, 241300, 241132, 241047, 240537, 240295, 239857, 238098, 237906, 237842, 237593, 237378, 237225, 236766, 236573, 236329, 236122, 235773, 234907, 234204, 234071, 233377, 233310, 233011, 232846, 232383, 232238, 231710, 231401, 230655, 229757, 229455, 229367, 229335, 228467, 228295, 227525, 226107, 225327, 224498, 224248, 223533, 223143, 223097, 223062, 221837, 221359, 220731, 220203, 219814, 219563, 219260, 218486, 218269, 218120, 217486, 217302, 216740, 214524, 212523, 211966, 211616, 211564, 211051, 210600, 210524, 210117, 208606, 208376, 206468, 206386, 206364, 206169, 206011, 205659, 205138, 205051, 204658, 203941, 203343, 203290, 203121, 202405, 201622, 201522, 200646, 200512, 200379, 200174, 200093, 199479, 199325, 199057, 198371, 196753, 196682, 196622, 196374, 195987, 195782, 195486, 194630, 194135, 193738, 193290, 192371, 190741, 190690, 190557, 190100, 189980, 189733, 188249, 188230, 188022, 187369, 187254, 186326, 186244, 185879, 185519, 185468, 184558, 184211, 184097, 182407, 181941, 181521, 181323, 180965, 180101, 180060, 179565, 179535, 179325, 179248, 178898, 178110, 176833, 176799, 176748, 176489, 176143, 176080, 175303, 175135, 174906, 173529, 173398, 172520, 172490, 172110, 172043, 171800, 170680, 170060, 170010, 169900, 169140, 168689, 168310, 168286, 167795, 167608, 165432, 164696, 164320, 164007, 163922, 162963, 162751, 161401, 161328, 160048, 158722, 157833, 157736, 157664, 157242, 156731, 155955, 154166, 154153, 154103, 154085, 153814, 152828, 152801, 152596, 152185, 152073, 151349, 150838, 150155, 150031, 149333, 148867, 148864, 147879, 147859, 147162, 146996, 146424, 146260, 146252, 146224, 146038, 145935, 145585, 145532, 144852, 144636, 144582, 144581, 144009, 143657, 143320, 143316, 142687, 140950, 140943, 140294, 140091, 139193, 138152, 137557, 137192, 137057, 136258, 136205, 135565, 134651, 134581, 134245, 134009, 133788, 133550, 133537, 133276, 133148, 132710, 132175, 131313, 131017, 130738, 129266, 128869, 128311, 127675, 127505, 127446, 127357, 126326, 125551, 125409, 125397, 125199, 124847, 124368, 124194, 124140, 124001, 123588, 123224, 121790, 121772, 121665, 121564, 121538, 121409, 121243, 120124, 119970, 118054, 117916, 116456, 116406, 116251, 116070, 115818, 115092, 114512, 114201, 113888, 113675, 112253, 112143, 112109, 111799, 111725, 111491, 108220, 108169, 108008, 107949, 107739, 106629, 105889, 105883, 105822, 104690, 104037, 103221, 102987, 102860, 102853, 102619, 102440, 101825, 101176, 100639, 100442, 98865, 98771, 98099, 98095, 97813, 97781, 97698, 95151, 94390, 93916, 93836, 93354, 93059, 92522, 91436, 90846, 90406, 89579, 89327, 89116, 89102, 88446, 87745, 87556, 87187, 87084, 86889, 86269, 85757, 85681, 85227, 85050, 84145, 84128, 83895, 82380, 81794, 81717, 80860, 80756, 80197, 79873, 79752, 79615, 79486, 79472, 78616, 78162, 77146, 76256, 73292, 72863, 72821, 72398, 72069, 71856, 70432, 70376, 70066, 69638, 69238, 68841, 68354, 67986, 66751, 66554, 65756, 65407, 65183, 63163, 62888, 61225, 61223, 61005, 60786, 59435, 59155, 58431, 57810, 57518, 57495, 57431, 57170, 57138, 57080, 56649, 56478, 55744, 54942, 54724, 54515, 53585, 53504, 53000, 52304, 51648, 51252, 50877, 50634, 50494, 50291, 49286, 49194, 49088, 48999, 48735, 48655, 48589, 48090, 48012, 47387, 47024, 46747, 46577, 46568, 46484, 46473, 45873, 45805, 45248, 45097, 44201, 43585, 43427, 43270, 43268, 43011, 42932, 42765, 42163, 41921, 41843, 41369, 39911, 38767, 38322, 36969, 36919, 36323, 36075, 35924, 35828, 35653, 35529, 35444, 35413, 35394, 34484, 34182, 34093, 34066, 33641, 33454, 33395, 32966, 32524, 32011, 31466, 31265, 31258, 30988, 30882, 30828, 30492, 30310, 30253, 29658, 29552, 28660, 28488, 27899, 27682, 27535, 26854, 25911, 25122, 24788, 24542, 24460, 24369, 23963, 22789, 22649, 22366, 22259, 22187, 21815, 21630, 21572, 21018, 20775, 20759, 20660, 20297, 20187, 20093, 19243, 19170, 18820, 18257, 17940, 17446, 17376, 16255, 16130, 15159, 15047, 14720, 14625, 13954, 13297, 11949, 11624, 11022, 10746, 10466, 9981, 7025, 5702, 4819, 4662, 4563, 4456, 4076, 2864, 2463, 1799, 1184, 1183, 281
